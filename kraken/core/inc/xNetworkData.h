#pragma once

#include "xCoreInterface.h"
#include "xProperty.h"
#include "xReferenceCount.h"


/*
class xNetworkData : public xProperty<xRefCount<IxNetworkData> >
{
X_INTERFACE_MAP_BEGIN
	X_INTERFACE_MAP_ENTRY(IxNetworkData)
X_INTERFACE_MAP_END

#define X_PROPERTY_NETWORK_DATA_HOST				X_PROPERTY_CREATE_STRING(0x0001)
#define X_PROPERTY_NETWORK_DATA_DOMAIN				X_PROPERTY_CREATE_STRING(0x0002)
#define X_PROPERTY_NETWORK_DATA_NODE_TYPE			X_PROPERTY_CREATE_TYPE(0x0003)
#define X_PROPERTY_NETWORK_DATA_NODE_TYPE_STRING	X_PROPERTY_CREATE_STRING(0x0004)
#define X_PROPERTY_NETWORK_DATA_SCOPE_ID			X_PROPERTY_CREATE_STRING(0x0005)
#define X_PROPERTY_NETWORK_DATA_ROUTING_ENABLED		X_PROPERTY_CREATE_TYPE(0x0006)
#define X_PROPERTY_NETWORK_DATA_ARP_PROXY_ENABLED	X_PROPERTY_CREATE_TYPE(0x0007)
#define X_PROPERTY_NETWORK_DATA_DNS_ENABLED			X_PROPERTY_CREATE_TYPE(0x0008)
#define X_PROPERTY_NETWORK_DATA_DNS_SERVER			X_PROPERTY_CREATE_INTERFACE(0x0009)

X_PROPERTY_MAP_BEGIN
	X_PROPERTY_MAP_SET_GET_STRING(Host, X_PROPERTY_NETWORK_DATA_HOST)
	X_PROPERTY_MAP_SET_GET_STRING(Domain, X_PROPERTY_NETWORK_DATA_DOMAIN)
	X_PROPERTY_MAP_SET_GET_TYPE(NodeType, uint32_t, 0, X_PROPERTY_NETWORK_DATA_NODE_TYPE)
	X_PROPERTY_MAP_SET_GET_STRING(NodeType, X_PROPERTY_NETWORK_DATA_NODE_TYPE_STRING)
	X_PROPERTY_MAP_SET_GET_STRING(ScopeId, X_PROPERTY_NETWORK_DATA_SCOPE_ID)
	X_PROPERTY_MAP_SET_GET_TYPE(RoutingEnabled, bool, false, X_PROPERTY_NETWORK_DATA_ROUTING_ENABLED)
	X_PROPERTY_MAP_SET_GET_TYPE(ArpProxyEnabled, bool, false, X_PROPERTY_NETWORK_DATA_ARP_PROXY_ENABLED)
	X_PROPERTY_MAP_SET_GET_TYPE(DnsEnabled, bool, false, X_PROPERTY_NETWORK_DATA_DNS_ENABLED)
	X_PROPERTY_MAP_SET_GET_INTERFACE(DnsServerData, IxDnsServerDataEnum, X_PROPERTY_NETWORK_DATA_DNS_SERVER)
X_PROPERTY_MAP_END

public:
	xNetworkData()
	{
	}

	~xNetworkData()
	{
	}
};
*/